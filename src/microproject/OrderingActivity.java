/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package microproject;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rushikesh
 */
public class OrderingActivity extends javax.swing.JFrame {

    /**
     * Creates new form OrderingActivity
     */
    public OrderingActivity() {
        initComponents();
        this.setTitle("ORDERING ACTIVITY");
        this.setSize(1190, 680);
         this.setLocationRelativeTo(null);
         Connect();
         tableupdate();
    }
     Connection conn;
    PreparedStatement pat, pat2 ,pat22 ;
     
     public void Connect() {
     
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
             String url = "jdbc:mysql://localhost:3306/miniproject";
            String user = "root";
            String password = "Dada@2003";
            conn = DriverManager.getConnection(url, user, password); 
           System.out.println("connectted");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    
    public void tableupdate(){
     int cc;
      
        try {
            pat = conn.prepareStatement("select * from MenuData;");
            ResultSet RS = pat.executeQuery();
            ResultSetMetaData RSMD = RS.getMetaData();
            cc = RSMD.getColumnCount();
            DefaultTableModel DTM = (DefaultTableModel) FoodOrderingTable.getModel();
            DTM.setRowCount(0);
            
            while(RS.next()){
                Vector  v2 = new Vector();
                
                for(int i = 0;i <= cc ; i++){
                 v2.add(RS.getString("FoodId"));
                 v2.add(RS.getString("FoodType"));
                 v2.add(RS.getString("FoodTime"));
                 v2.add(RS.getString("Item"));
                 v2.add(RS.getString("Price"));
                }
                DTM.addRow(v2); 
                /*DefaultTableModel model = (DefaultTableModel) StudentDataTable.getModel();
                   model.addRow(new Object[]{srno,name,roll,clas});*/
           }
            
        } catch (SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
        } 
            System.out.println("connectted");
    }
    
    public void tableupdateforSearch2(String sta,String Ftype,String FTime){
     int cc;
      
        try {
            pat = conn.prepareStatement(sta);
            pat.setString(1, Ftype);
            pat.setString(2, FTime);
            ResultSet RS = pat.executeQuery();
            ResultSetMetaData RSMD = RS.getMetaData();
            cc = RSMD.getColumnCount();
            DefaultTableModel DTM = (DefaultTableModel) FoodOrderingTable.getModel();
            DTM.setRowCount(0);
            
            while(RS.next()){
                Vector  v2 = new Vector();
                
                for(int i = 0;i <= cc ; i++){
                 v2.add(RS.getString("FoodId"));
                 v2.add(RS.getString("FoodType"));
                 v2.add(RS.getString("FoodTime"));
                 v2.add(RS.getString("Item"));
                 v2.add(RS.getString("Price"));
                }
                DTM.addRow(v2); 
                /*DefaultTableModel model = (DefaultTableModel) StudentDataTable.getModel();
                   model.addRow(new Object[]{srno,name,roll,clas});*/
           }
            
        } catch (SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
        } 
            System.out.println("connectted");
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FoodOrderingTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ComboBoxFoodTimeOrderingSystem = new javax.swing.JComboBox<>();
        ComboBoxOrderingSystemType = new javax.swing.JComboBox<>();
        SearchFoodInOrderingSystem = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        EnterBillNo = new javax.swing.JTextField();
        EnterName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        EnterQuqntity = new javax.swing.JTextField();
        OrderingSystemGenrateBillAdd_22 = new javax.swing.JButton();
        DeleteGenratedFoodQuantity = new javax.swing.JButton();
        FoodItemIdToCreateBill = new javax.swing.JTextField();
        OrderingSystemGenrateBillAdd_1 = new javax.swing.JButton();
        ClearBillNoDataNameFormGenrateBill = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        SaveBill = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillDataTableOrderingSystem = new javax.swing.JTable();
        GenrateBillNo = new javax.swing.JTextField();
        GenrateBillDate = new javax.swing.JTextField();
        GenrateBillName = new javax.swing.JTextField();
        PrintBill = new javax.swing.JButton();
        ClearBillingArea = new javax.swing.JButton();
        GobackFromOF = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1150, 620));
        setMinimumSize(new java.awt.Dimension(1142, 606));
        setResizable(false);
        setSize(new java.awt.Dimension(1150, 620));

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDERING FOOD");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MENU  DATA ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        FoodOrderingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food_Id", "Type", "Food Time", "Item", "Price"
            }
        ));
        FoodOrderingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FoodOrderingTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(FoodOrderingTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "SEARCH IN MENU ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Food Time");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Type");

        ComboBoxFoodTimeOrderingSystem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BREAKFAST", "LUNCH", "DINNER" }));

        ComboBoxOrderingSystemType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VEG", "NON-VEG" }));

        SearchFoodInOrderingSystem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SearchFoodInOrderingSystem.setText("SEARCH");
        SearchFoodInOrderingSystem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFoodInOrderingSystemActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("REFRESH TABLE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxOrderingSystemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBoxFoodTimeOrderingSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(SearchFoodInOrderingSystem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ComboBoxFoodTimeOrderingSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ComboBoxOrderingSystemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchFoodInOrderingSystem)
                    .addComponent(jButton1))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "GENRATE BILL ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("BILL NO");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("DATE");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("NAME");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("FOOD ID");

        EnterBillNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        EnterName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        EnterName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterNameActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("QUANTITY");

        EnterQuqntity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        OrderingSystemGenrateBillAdd_22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        OrderingSystemGenrateBillAdd_22.setText("ADD");
        OrderingSystemGenrateBillAdd_22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderingSystemGenrateBillAdd_22ActionPerformed(evt);
            }
        });

        DeleteGenratedFoodQuantity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeleteGenratedFoodQuantity.setText("DELETE");
        DeleteGenratedFoodQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteGenratedFoodQuantityActionPerformed(evt);
            }
        });

        FoodItemIdToCreateBill.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        OrderingSystemGenrateBillAdd_1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        OrderingSystemGenrateBillAdd_1.setText("ADD");
        OrderingSystemGenrateBillAdd_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderingSystemGenrateBillAdd_1ActionPerformed(evt);
            }
        });

        ClearBillNoDataNameFormGenrateBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ClearBillNoDataNameFormGenrateBill.setText("CLEAR");
        ClearBillNoDataNameFormGenrateBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBillNoDataNameFormGenrateBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(OrderingSystemGenrateBillAdd_1))
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FoodItemIdToCreateBill, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ClearBillNoDataNameFormGenrateBill))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EnterName)
                                    .addComponent(EnterBillNo)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(OrderingSystemGenrateBillAdd_22)))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DeleteGenratedFoodQuantity))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(EnterQuqntity, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(EnterBillNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EnterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrderingSystemGenrateBillAdd_1)
                    .addComponent(ClearBillNoDataNameFormGenrateBill))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(FoodItemIdToCreateBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(EnterQuqntity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OrderingSystemGenrateBillAdd_22)
                    .addComponent(DeleteGenratedFoodQuantity))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "BILL ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel5.setOpaque(false);

        SaveBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SaveBill.setText("SAVE BILL");
        SaveBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBillActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("BILL NO");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("DATE");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("NAME");

        BillDataTableOrderingSystem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Food Name", "Food Price", "Quantity", "Total Price"
            }
        ));
        jScrollPane2.setViewportView(BillDataTableOrderingSystem);
        if (BillDataTableOrderingSystem.getColumnModel().getColumnCount() > 0) {
            BillDataTableOrderingSystem.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        GenrateBillNo.setEditable(false);
        GenrateBillNo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        GenrateBillDate.setEditable(false);

        GenrateBillName.setEditable(false);

        PrintBill.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        PrintBill.setText("PRINT");
        PrintBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintBillActionPerformed(evt);
            }
        });

        ClearBillingArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ClearBillingArea.setText("CLEAR");
        ClearBillingArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBillingAreaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(GenrateBillNo))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(GenrateBillDate))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(GenrateBillName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(SaveBill)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PrintBill, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ClearBillingArea)))
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(GenrateBillNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11))
                    .addComponent(GenrateBillDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(GenrateBillName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveBill)
                    .addComponent(PrintBill)
                    .addComponent(ClearBillingArea))
                .addContainerGap())
        );

        GobackFromOF.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        GobackFromOF.setForeground(new java.awt.Color(0, 0, 255));
        GobackFromOF.setText("Go Back");
        GobackFromOF.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        GobackFromOF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GobackFromOFMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1058, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GobackFromOF, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(GobackFromOF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnterNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EnterNameActionPerformed

    private void GobackFromOFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GobackFromOFMouseClicked
        AdminActivity ma = new AdminActivity();
        this.setVisible(false);       
        ma.setVisible(true);
    }//GEN-LAST:event_GobackFromOFMouseClicked

    private void FoodOrderingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FoodOrderingTableMouseClicked
        DefaultTableModel modell = (DefaultTableModel) FoodOrderingTable.getModel();
       int selectedIndex = FoodOrderingTable.getSelectedRow();
        FoodItemIdToCreateBill.setText(modell.getValueAt(selectedIndex, 0).toString());
    }//GEN-LAST:event_FoodOrderingTableMouseClicked

    private void SearchFoodInOrderingSystemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFoodInOrderingSystemActionPerformed
         String ftime = ComboBoxFoodTimeOrderingSystem.getSelectedItem().toString();
        String ftype = ComboBoxOrderingSystemType.getSelectedItem().toString();
        
        if(ftime.equals("NONE") || ftype.equals("NONE")){
                JOptionPane.showMessageDialog(this, "Select Option for search",
                        "Search Status", JOptionPane.ERROR_MESSAGE);
        }else if(!ftime.isEmpty() || !ftype.isEmpty()){
            String state = "select * from MenuData where FoodType=? and FoodTime=?";
            tableupdateforSearch2(state,ftype,ftime);
        }
    }//GEN-LAST:event_SearchFoodInOrderingSystemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tableupdate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void OrderingSystemGenrateBillAdd_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderingSystemGenrateBillAdd_1ActionPerformed
    String billno = EnterBillNo.getText();
    Date selectedDate = jDateChooser1.getDate();
    String name =  EnterName.getText();
    if(billno.isEmpty() && selectedDate == null || name.isEmpty()){
      JOptionPane.showMessageDialog(this, "Insertion Fields Are Empty",
                        "Data Insert Status", JOptionPane.ERROR_MESSAGE);
    }else{
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dateFormat.format(selectedDate);

        // Set the text fields with the corresponding values
        GenrateBillDate.setText(date);           // Set the formatted date string
        GenrateBillName.setText(name);           // Set the name
        GenrateBillNo.setText(billno); 
    }//GEN-LAST:event_OrderingSystemGenrateBillAdd_1ActionPerformed
    }
    public void tableupdate22(){
     int cc;
      
        try {
            pat = conn.prepareStatement("select * from billdata");
            ResultSet RS = pat.executeQuery();
            ResultSetMetaData RSMD = RS.getMetaData();
            cc = RSMD.getColumnCount();
            DefaultTableModel DTM = (DefaultTableModel) BillDataTableOrderingSystem.getModel();
            DTM.setRowCount(0);
            
            while(RS.next()){
                Vector  v2 = new Vector();
                
                for(int i = 0;i <= cc ; i++){
                 v2.add(RS.getString("Id"));   
                 v2.add(RS.getString("FoodName"));
                 v2.add(RS.getString("Price"));
                 v2.add(RS.getString("Qty"));
                 v2.add(RS.getString("TPrice"));
                }
                DTM.addRow(v2); 
                /*DefaultTableModel model = (DefaultTableModel) StudentDataTable.getModel();
                   model.addRow(new Object[]{srno,name,roll,clas});*/
           }
            
        } catch (SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
        } 
            System.out.println("connectted");
    }
    private void OrderingSystemGenrateBillAdd_22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderingSystemGenrateBillAdd_22ActionPerformed
        String fid = FoodItemIdToCreateBill.getText();
        String eqty = EnterQuqntity.getText(); 
        String Foodname = "";
        String price = "";
        try {                      
            if(fid.isEmpty() || eqty.isEmpty()){
                 JOptionPane.showMessageDialog(this, "Insertion Fields Are Empty",
                        "Data Insert Status", JOptionPane.ERROR_MESSAGE);
            }
            else{pat = conn.prepareStatement("select * from MenuData where FoodId=?");
            pat.setString(1, fid);       
            ResultSet RS = pat.executeQuery();      
            while(RS.next()){
            Foodname = RS.getString("Item");
            price = RS.getString("Price");
            }   
            int pri = Integer.parseInt(price);
            int qtt = Integer.parseInt(eqty);
            int res = pri * qtt;
            pat = conn.prepareStatement("insert into billdata (FoodName,Price,Qty,TPrice) values (?,?,?,?)");               
                   pat.setString(1,Foodname);                  
                   pat.setInt(2,Integer.parseInt(price));
                   pat.setInt(3, Integer.parseInt(eqty));
                   pat.setInt(4, res);                   
                   pat.executeUpdate();}
                   
                   
        }            
         catch (SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error : "+ex,
                        "Record Status", JOptionPane.PLAIN_MESSAGE);
        } 
            tableupdate22();
            System.out.println("connectted");
        
    }//GEN-LAST:event_OrderingSystemGenrateBillAdd_22ActionPerformed

    private void ClearBillingAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBillingAreaActionPerformed
        try {
            pat = conn.prepareStatement("truncate table billdata");
            pat.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(OrderingActivity.class.getName()).log(Level.SEVERE, null, ex);
        }
        GenrateBillDate.setText("");
        GenrateBillName.setText("");
        GenrateBillNo.setText("");
        tableupdate22();
                
    }//GEN-LAST:event_ClearBillingAreaActionPerformed

    private void ClearBillNoDataNameFormGenrateBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBillNoDataNameFormGenrateBillActionPerformed
        EnterBillNo.setText("");
        jDateChooser1.setCalendar(null);
        EnterName.setText("");       
    }//GEN-LAST:event_ClearBillNoDataNameFormGenrateBillActionPerformed

    private void DeleteGenratedFoodQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteGenratedFoodQuantityActionPerformed
       int row = BillDataTableOrderingSystem.getSelectedRow();
       int col = BillDataTableOrderingSystem.getSelectedColumn();
        if(row < 0){
             JOptionPane.showMessageDialog(this, "No row is Selected ! Please Select the row",
                       "Select Row", JOptionPane.ERROR_MESSAGE);
          }else{
            try {         
                Object val = BillDataTableOrderingSystem.getValueAt(row, col);
                String fid = val.toString();               
                pat = conn.prepareStatement("delete from billdata where Id=?");
                pat.setString(1, fid);
                pat.executeUpdate();              
                 tableupdate22();                                  
            } catch (SQLException ex) {
                Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Table is Empty : "+ex,
                        "View DataBase", JOptionPane.ERROR_MESSAGE);
            }
              
             
          } 
    }//GEN-LAST:event_DeleteGenratedFoodQuantityActionPerformed

    private void SaveBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBillActionPerformed
        try {
            String Billno = GenrateBillNo.getText();
            String Datee = GenrateBillDate.getText();
            String custName = GenrateBillName.getText();
            DefaultTableModel DTM = (DefaultTableModel) BillDataTableOrderingSystem.getModel();
            int cot = DTM.getRowCount();
            if(Billno.isEmpty() || Datee.isEmpty() || custName.isEmpty() ||  cot <= 0){
            JOptionPane.showMessageDialog(this, "Insertion Fields Or Table Is Empty ",
                        "Data Insert Status", JOptionPane.ERROR_MESSAGE);
            }
            else{
            String Foodname = "";
            String Qty = "";
            String price = "";       
            pat = conn.prepareStatement("select group_concat(concat(FoodName, ',')) AS FName, SUM(Qty) as sumqty, SUM(Price) as sumprice from billdata;");               
            ResultSet RS = pat.executeQuery();
            while(RS.next()){
                Foodname = RS.getString("FName");
                Qty = RS.getString("sumqty");
                price = RS.getString("sumprice");
            } 
            
            pat2 = conn.prepareStatement("insert into Savedbilldata (Billno,Datee,CustName,FoodName,Qty,Price) values (?,?,?,?,?,?)");
                  pat2.setString(1,Billno);
                  pat2.setString(2,Datee);                   
                  pat2.setString(3,custName);
                  pat2.setString(4,Foodname);
                  pat2.setString(5,Qty);
                  pat2.setString(6,price);
                  pat2.executeUpdate();
            }
            JOptionPane.showMessageDialog(this, "Bill Saved Sucessfully",
                        "Bill Saved Status", JOptionPane.PLAIN_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(OrderingActivity.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Duplicate Key"+ex,
                        "Data Insert Status", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SaveBillActionPerformed

    private void PrintBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintBillActionPerformed
        try {
            String Billno = GenrateBillNo.getText();
            String Datee = jDateChooser1.getDateFormatString();
//          String Datee GenrateBillDate.getText();
            String custName = GenrateBillName.getText();
            DefaultTableModel DTM = (DefaultTableModel) BillDataTableOrderingSystem.getModel();
            String Foodname = "";
            String Qty = "";
            String price = "";
            String Tprice = "";
            String ss = JOptionPane.showInputDialog(rootPane, "Enter Name of file to save", "Save File Status", WIDTH);
            String res = ss.concat(".pdf");
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(res));
            
            document.open();
            Font font = FontFactory.getFont(FontFactory.COURIER, 16, BaseColor.BLACK);
            
            document.add(new Paragraph("                                                              VIVEK HOTEL"));
            document.add(new Paragraph("                                       "));
            
            
            document.add(new Paragraph("                Bill No : "+Billno));
            document.add(new Paragraph("   "));
            
            
            document.add(new Paragraph("                Date : "+Datee));
            document.add(new Paragraph("   "));
            
            document.add(new Paragraph("                Customer Name : "+custName));
            document.add(new Paragraph("   "));
            
            // table
            PdfPTable table = new PdfPTable(4);       
            pat = conn.prepareStatement("select FoodName,Price,Qty,TPrice from billdata;");               
            ResultSet RS = pat.executeQuery();
            addTableHeader(table);
            while(RS.next()){
                Foodname = RS.getString("FoodName");
                price = RS.getString("Price");
                Qty = RS.getString("Qty");
                Tprice = RS.getString("TPrice");
                addRows(table, Foodname, price,Qty,Tprice);
            }      
            document.add(table);
            String priceA = "";
            pat22 = conn.prepareStatement("select SUM(TPrice) as sumprice from billdata;");               
            ResultSet RS2 = pat22.executeQuery();
            while(RS2.next()){               
                priceA = RS2.getString("sumprice");
            } 
            document.add(new Paragraph("                                                                                                   Total Amount :"+priceA));
            document.add(new Paragraph("                                       "));
            
            document.close();
            JOptionPane.showMessageDialog(this, "Bill Printed Sucessfully",
                        "Bill Print Status", JOptionPane.PLAIN_MESSAGE);
        } catch (FileNotFoundException | DocumentException | SQLException ex) {
            Logger.getLogger(OrderingActivity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PrintBillActionPerformed
    
    private static void addTableHeader(PdfPTable table) {
        Stream.of("Food name","Price","Quantity","Total Price")
          .forEach(columnTitle -> {
            PdfPCell header = new PdfPCell();
            header.setRowspan(10);
            header.setBackgroundColor(BaseColor.LIGHT_GRAY);
            header.setBorderWidth(2);
            header.setPhrase(new Phrase(columnTitle));
            table.addCell(header);
            
        });
    }
    
    private static void addRows(PdfPTable table, String food_name,String price, String quantity, String Tprice) {
        
        table.addCell(food_name);
        table.addCell(price);
        table.addCell(quantity);
        table.addCell(Tprice);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderingActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderingActivity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BillDataTableOrderingSystem;
    private javax.swing.JButton ClearBillNoDataNameFormGenrateBill;
    private javax.swing.JButton ClearBillingArea;
    private javax.swing.JComboBox<String> ComboBoxFoodTimeOrderingSystem;
    private javax.swing.JComboBox<String> ComboBoxOrderingSystemType;
    private javax.swing.JButton DeleteGenratedFoodQuantity;
    private javax.swing.JTextField EnterBillNo;
    private javax.swing.JTextField EnterName;
    private javax.swing.JTextField EnterQuqntity;
    private javax.swing.JTextField FoodItemIdToCreateBill;
    private javax.swing.JTable FoodOrderingTable;
    private javax.swing.JTextField GenrateBillDate;
    private javax.swing.JTextField GenrateBillName;
    private javax.swing.JTextField GenrateBillNo;
    private javax.swing.JLabel GobackFromOF;
    private javax.swing.JButton OrderingSystemGenrateBillAdd_1;
    private javax.swing.JButton OrderingSystemGenrateBillAdd_22;
    private javax.swing.JButton PrintBill;
    private javax.swing.JButton SaveBill;
    private javax.swing.JButton SearchFoodInOrderingSystem;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
