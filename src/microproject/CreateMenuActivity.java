/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package microproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rushikesh
 */
public class CreateMenuActivity extends javax.swing.JFrame {

    /**
     * Creates new form JuntionActivity
     */
    public CreateMenuActivity() {
        initComponents();
        this.setTitle("MENU GENTRATING");
        this.setSize(860, 635);
        this.setLocationRelativeTo(null);
        Connect();
        tableupdate();
    }
    Connection conn;
    PreparedStatement pat;
     public void Connect() {
     
        try {
           Class.forName("com.mysql.cj.jdbc.Driver");
            String url = "jdbc:mysql://localhost:3306/miniproject";
            String user = "root";
            String password = "Dada@2003";
            conn = DriverManager.getConnection(url, user, password); 
          
           System.out.println("connectted");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    
    public void tableupdate(){
     int cc;
      
        try {
            pat = conn.prepareStatement("select * from MenuData;");
            ResultSet RS = pat.executeQuery();
            ResultSetMetaData RSMD = RS.getMetaData();
            cc = RSMD.getColumnCount();
            DefaultTableModel DTM = (DefaultTableModel) CreateMenuMenuDataTable.getModel();
            DTM.setRowCount(0);
            
            while(RS.next()){
                Vector  v2 = new Vector();
                
                for(int i = 0;i <= cc ; i++){
                 v2.add(RS.getString("FoodId"));
                 v2.add(RS.getString("FoodType"));
                 v2.add(RS.getString("FoodTime"));
                 v2.add(RS.getString("Item"));
                 v2.add(RS.getString("Price"));
                }
                DTM.addRow(v2); 
                /*DefaultTableModel model = (DefaultTableModel) StudentDataTable.getModel();
                   model.addRow(new Object[]{srno,name,roll,clas});*/
           }
            
        } catch (SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
        } 
            System.out.println("connectted");
    }
    
     public void tableupdateforSearch(String sta,String Ftype,String FTime){
     int cc;
      
        try {
            pat = conn.prepareStatement(sta);
            pat.setString(1, Ftype);
            pat.setString(2, FTime);
            ResultSet RS = pat.executeQuery();
            ResultSetMetaData RSMD = RS.getMetaData();
            cc = RSMD.getColumnCount();
            DefaultTableModel DTM = (DefaultTableModel) CreateMenuMenuDataTable.getModel();
            DTM.setRowCount(0);
            
            while(RS.next()){
                Vector  v2 = new Vector();
                
                for(int i = 0;i <= cc ; i++){
                 v2.add(RS.getString("FoodId"));
                 v2.add(RS.getString("FoodType"));
                 v2.add(RS.getString("FoodTime"));
                 v2.add(RS.getString("Item"));
                 v2.add(RS.getString("Price"));
                }
                DTM.addRow(v2); 
                /*DefaultTableModel model = (DefaultTableModel) StudentDataTable.getModel();
                   model.addRow(new Object[]{srno,name,roll,clas});*/
           }
            
        } catch (SQLException ex) {
            Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
        } 
            System.out.println("connectted");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CreateMenuMenuDataTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CreateMenuItem = new javax.swing.JTextField();
        CreateMenuFoodId = new javax.swing.JTextField();
        CreateMenuEnter = new javax.swing.JButton();
        CreateMenuUpdate = new javax.swing.JButton();
        CreateMenuDelete = new javax.swing.JButton();
        CreateMenuClear = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        CreateMenuPrice = new javax.swing.JTextField();
        CreateMenuFoodType = new javax.swing.JComboBox<>();
        CreateMenuFoodTime = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CreateMenuSearchComboBoxType = new javax.swing.JComboBox<>();
        CreateMenuSearchComboBoxFoodTime = new javax.swing.JComboBox<>();
        CreateMenuSearch = new javax.swing.JButton();
        RefreshTabklCreateMenu = new javax.swing.JButton();
        GoBackFromCM = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(844, 575));
        setMinimumSize(new java.awt.Dimension(844, 575));
        setPreferredSize(new java.awt.Dimension(844, 575));
        setResizable(false);
        setSize(new java.awt.Dimension(844, 575));

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CREATE MENU ");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MENU DATA ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel2.setOpaque(false);

        CreateMenuMenuDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food_Id", "Type", "Food Time", "Item", "Price"
            }
        ));
        CreateMenuMenuDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CreateMenuMenuDataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CreateMenuMenuDataTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MENU ACTIVITY", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Food_Id");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Type");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Food Time");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Item");

        CreateMenuItem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        CreateMenuFoodId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CreateMenuFoodId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateMenuFoodIdActionPerformed(evt);
            }
        });

        CreateMenuEnter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CreateMenuEnter.setText("ENTER");
        CreateMenuEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateMenuEnterActionPerformed(evt);
            }
        });

        CreateMenuUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CreateMenuUpdate.setText("UPDATE");
        CreateMenuUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateMenuUpdateActionPerformed(evt);
            }
        });

        CreateMenuDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CreateMenuDelete.setText("DELETE");
        CreateMenuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateMenuDeleteActionPerformed(evt);
            }
        });

        CreateMenuClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CreateMenuClear.setText("CLEAR");
        CreateMenuClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateMenuClearActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Price");

        CreateMenuPrice.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        CreateMenuFoodType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CreateMenuFoodType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VEG", "NON-VEG" }));

        CreateMenuFoodTime.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CreateMenuFoodTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BREAKFAST", "LUNCH", "DINNER" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(CreateMenuEnter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CreateMenuUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CreateMenuDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CreateMenuClear))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CreateMenuItem)
                            .addComponent(CreateMenuFoodId)
                            .addComponent(CreateMenuPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(CreateMenuFoodType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreateMenuFoodTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateMenuFoodId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(CreateMenuFoodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CreateMenuFoodTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CreateMenuItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(CreateMenuPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateMenuEnter)
                    .addComponent(CreateMenuUpdate)
                    .addComponent(CreateMenuDelete)
                    .addComponent(CreateMenuClear))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "SEARCH", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Type");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Food Time");

        CreateMenuSearchComboBoxType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "VEG", "NON-VEG" }));

        CreateMenuSearchComboBoxFoodTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "BREAKFAST", "LUNCH", "DINNER" }));

        CreateMenuSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CreateMenuSearch.setText("SEARCH");
        CreateMenuSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateMenuSearchActionPerformed(evt);
            }
        });

        RefreshTabklCreateMenu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        RefreshTabklCreateMenu.setText("REFRESH TABLE");
        RefreshTabklCreateMenu.setActionCommand("");
        RefreshTabklCreateMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshTabklCreateMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(CreateMenuSearchComboBoxFoodTime, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CreateMenuSearchComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(CreateMenuSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RefreshTabklCreateMenu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateMenuSearchComboBoxFoodTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateMenuSearchComboBoxType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateMenuSearch)
                    .addComponent(RefreshTabklCreateMenu))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        GoBackFromCM.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        GoBackFromCM.setForeground(new java.awt.Color(0, 51, 255));
        GoBackFromCM.setText("Go Back");
        GoBackFromCM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        GoBackFromCM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GoBackFromCMMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GoBackFromCM)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(GoBackFromCM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateMenuEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateMenuEnterActionPerformed
    String fid = CreateMenuFoodId.getText();
    String Ftype = CreateMenuFoodType.getSelectedItem().toString();
    String FoodTime = CreateMenuFoodTime.getSelectedItem().toString();    
    String Item = CreateMenuItem.getText();
    String price = CreateMenuPrice.getText();
    
    
     if(fid.isEmpty() || Ftype.isEmpty() || FoodTime.isEmpty() || Item.isEmpty() || price.isEmpty()){
             JOptionPane.showMessageDialog(this, "Plese enter al fields",
                        "Try again", JOptionPane.ERROR_MESSAGE);
          }else{
               try {
                   pat = conn.prepareStatement("insert into MenuData (FoodId,FoodType,FoodTime,Item,Price) values (?,?,?,?,? )");
                   pat.setString(1,fid);
                   pat.setString(2,Ftype);
                   pat.setString(3,FoodTime);
                   pat.setString(4,Item);
                   pat.setString(5,price);
                   
                   pat.executeUpdate();
                   JOptionPane.showMessageDialog(this, "Record Saved Succesfully",
                        "Record Status", JOptionPane.PLAIN_MESSAGE);
                   
                   CreateMenuFoodId.setText("");                  
                   CreateMenuItem.setText("");
                   CreateMenuPrice.setText("");
               } catch (SQLException ex) {
                   Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
                   JOptionPane.showMessageDialog(this, "Duplicate Key : "+ex,
                        "Try again", JOptionPane.ERROR_MESSAGE);
               }
                tableupdate();
          } 
    }//GEN-LAST:event_CreateMenuEnterActionPerformed

    private void GoBackFromCMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GoBackFromCMMouseClicked
        AdminActivity ma = new AdminActivity();
        this.setVisible(false);       
        ma.setVisible(true);
    }//GEN-LAST:event_GoBackFromCMMouseClicked

    private void CreateMenuUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateMenuUpdateActionPerformed
         String fid = CreateMenuFoodId.getText();
         String Ftype = CreateMenuFoodType.getSelectedItem().toString();
         String FoodTime = CreateMenuFoodTime.getSelectedItem().toString();    
         String Item = CreateMenuItem.getText();
         String price = CreateMenuPrice.getText();
          if(fid.isEmpty() || Ftype.isEmpty() || FoodTime.isEmpty() || Item.isEmpty() || price.isEmpty()){
             JOptionPane.showMessageDialog(this, "Plese enter al fields",
                        "Try again", JOptionPane.ERROR_MESSAGE);
          }else{
               try {
                   pat = conn.prepareStatement("update MenuData set FoodType=?,FoodTime=?,Item=?,Price=? where FoodId=?");
                   pat.setString(1,Ftype);
                   pat.setString(2,FoodTime);
                   pat.setString(3,Item);
                   pat.setString(4,price);  
                   pat.setString(5, fid);
                   pat.executeUpdate();
                   JOptionPane.showMessageDialog(this, "Updated Succesfully",
                        "Update Status", JOptionPane.PLAIN_MESSAGE);
                   
                      CreateMenuFoodId.setText("");                   
                   CreateMenuItem.setText("");
                   CreateMenuPrice.setText("");
               } catch (SQLException ex) {
                   Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
                   JOptionPane.showMessageDialog(this, "Duplicate Key Or SQL Exception : "+ex,
                        "Try again", JOptionPane.ERROR_MESSAGE);
               }
                tableupdate();
          }
    }//GEN-LAST:event_CreateMenuUpdateActionPerformed

    private void CreateMenuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateMenuDeleteActionPerformed
         int row = CreateMenuMenuDataTable.getSelectedRow();
        if(row < 0){
             JOptionPane.showMessageDialog(this, "No row is Selected ! Please Select the row",
                       "Select Row", JOptionPane.ERROR_MESSAGE);
          }else{
            try {              
                String fid = CreateMenuFoodId.getText();
                pat = conn.prepareStatement("delete from MenuData where FoodId=?");
                pat.setString(1, fid);
                pat.executeUpdate();
                JOptionPane.showMessageDialog(this, "Deleted Succesfully",
                        "Delete Status", JOptionPane.PLAIN_MESSAGE);
                  tableupdate();
                  
                   CreateMenuFoodId.setText("");
                   CreateMenuItem.setText("");
                   CreateMenuPrice.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(CreateMenuActivity.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Table is Empty : "+ex,
                        "View DataBase", JOptionPane.ERROR_MESSAGE);
            }
              
             
          } 
    }//GEN-LAST:event_CreateMenuDeleteActionPerformed

    private void CreateMenuClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateMenuClearActionPerformed
                   CreateMenuFoodId.setText("");                                     
                   CreateMenuItem.setText("");
                   CreateMenuPrice.setText("");
    }//GEN-LAST:event_CreateMenuClearActionPerformed

    private void CreateMenuFoodIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateMenuFoodIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CreateMenuFoodIdActionPerformed

    private void CreateMenuMenuDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CreateMenuMenuDataTableMouseClicked
        DefaultTableModel modell = (DefaultTableModel) CreateMenuMenuDataTable.getModel();
       int selectedIndex = CreateMenuMenuDataTable.getSelectedRow();
        CreateMenuFoodId.setText(modell.getValueAt(selectedIndex, 0).toString());        
        CreateMenuItem.setText(modell.getValueAt(selectedIndex, 3).toString());
        CreateMenuPrice.setText(modell.getValueAt(selectedIndex, 4).toString());
    }//GEN-LAST:event_CreateMenuMenuDataTableMouseClicked

    private void RefreshTabklCreateMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshTabklCreateMenuActionPerformed
        tableupdate();
    }//GEN-LAST:event_RefreshTabklCreateMenuActionPerformed

    private void CreateMenuSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateMenuSearchActionPerformed
        String ftime = CreateMenuSearchComboBoxFoodTime.getSelectedItem().toString();
        String ftype = CreateMenuSearchComboBoxType.getSelectedItem().toString();
        if(ftime.equals("NONE") || ftype.equals("NONE")){
            JOptionPane.showMessageDialog(this, "Select Option for search",
                "Search Status", JOptionPane.ERROR_MESSAGE);
        }else if(!ftime.isEmpty() || !ftype.isEmpty()){
            String state = "select * from MenuData where FoodType=? and FoodTime=?";
            tableupdateforSearch(state,ftype,ftime);
        }
    }//GEN-LAST:event_CreateMenuSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateMenuActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateMenuActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateMenuActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateMenuActivity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateMenuActivity().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateMenuClear;
    private javax.swing.JButton CreateMenuDelete;
    private javax.swing.JButton CreateMenuEnter;
    private javax.swing.JTextField CreateMenuFoodId;
    private javax.swing.JComboBox<String> CreateMenuFoodTime;
    private javax.swing.JComboBox<String> CreateMenuFoodType;
    private javax.swing.JTextField CreateMenuItem;
    private javax.swing.JTable CreateMenuMenuDataTable;
    private javax.swing.JTextField CreateMenuPrice;
    private javax.swing.JButton CreateMenuSearch;
    private javax.swing.JComboBox<String> CreateMenuSearchComboBoxFoodTime;
    private javax.swing.JComboBox<String> CreateMenuSearchComboBoxType;
    private javax.swing.JButton CreateMenuUpdate;
    private javax.swing.JLabel GoBackFromCM;
    private javax.swing.JButton RefreshTabklCreateMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
